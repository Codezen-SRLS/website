{"version":3,"file":"component---src-pages-404-js-1154232cf0472d4ba86e.js","mappings":"+HAmFA,IAzEA,SAAYA,GAQR,IAADC,EAAAC,EAAA,IARU,YACXC,EAAW,MACXC,EAAK,SACLC,EAAQ,MACRC,EAAK,QACLC,EAAO,SACPC,EAAQ,SACRC,GACDT,EACC,MAAM,KAAEU,IAASC,EAAAA,EAAAA,gBAAe,aAe1BC,EAAkBT,GAAeO,EAAKG,aAAaV,YACnDW,EAAgC,QAApBb,EAAGS,EAAKG,oBAAY,IAAAZ,OAAA,EAAjBA,EAAmBG,MAClCW,EAAYN,EACd,GAAGC,EAAKG,aAAaG,UAAUP,IAC/BC,EAAKG,aAAaG,QAChBC,EAAYX,EAAQ,GAAGI,EAAKG,aAAaG,UAAUV,IAAU,KAEnE,OACEY,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQd,EAAQ,GAAGA,OAAWU,IAAiBA,GAC/CI,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASR,IAClCM,EAAAA,cAAA,QAAMC,KAAK,WAAWC,QAASZ,IAC/BU,EAAAA,cAAA,QAAMG,IAAI,YAAYC,KAAMP,IAG5BG,EAAAA,cAAA,QAAMK,SAAS,WAAWH,QAAShB,GAASU,IAC5CI,EAAAA,cAAA,QAAMK,SAAS,iBAAiBH,QAASR,IACzCM,EAAAA,cAAA,QAAMK,SAAS,UAAUH,QAASb,EAAU,UAAY,YACxDW,EAAAA,cAAA,QAAMK,SAAS,SAASH,QAASL,IAChCE,GAAaC,EAAAA,cAAA,QAAMK,SAAS,WAAWH,QAASH,IAGjDC,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBlB,EAAAQ,EAAKG,oBAAY,IAAAX,OAAA,EAAjBA,EAAmBsB,SAAU,KACnEN,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAAShB,GAASU,IAC7CI,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASR,IACzCK,GAAaC,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASH,IAGlDC,EAAAA,cAAA,UAAQO,KAAK,uBACVC,KAAKC,UAAU,CACd,WAAY,qBACZ,QAAS,eACTR,KAAML,EACNc,IAAKlB,EAAKG,aAAaG,QACvBa,KAAM,GAAGnB,EAAKG,aAAaG,iCAC3Bb,YAAaS,EACbkB,OAAQ,CACN,mCACA,kCACA,mDAILzB,EAGP,C,mGC5EA,MAQa0B,EAAOA,IAClBb,EAAAA,cAACc,EAAAA,EAAG,CAAC5B,MAAM,iBAAiBD,YAAY,4BAG1C,UAZqB8B,MACnBC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,UAAS,IAAI,GACZ,IAEI,K","sources":["webpack://codezen/./src/components/seo.js","webpack://codezen/./src/pages/404.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({\n  description,\n  title,\n  children,\n  image,\n  article,\n  keywords,\n  pathname,\n}) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n  const canonical = pathname\n    ? `${site.siteMetadata.siteUrl}${pathname}`\n    : site.siteMetadata.siteUrl;\n  const metaImage = image ? `${site.siteMetadata.siteUrl}${image}` : null;\n\n  return (\n    <>\n      <title>{title ? `${title} | ${defaultTitle}` : defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={keywords} />\n      <link rel=\"canonical\" href={canonical} />\n\n      {/* Open Graph / Facebook */}\n      <meta property=\"og:title\" content={title || defaultTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content={article ? \"article\" : \"website\"} />\n      <meta property=\"og:url\" content={canonical} />\n      {metaImage && <meta property=\"og:image\" content={metaImage} />}\n\n      {/* Twitter */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title || defaultTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {metaImage && <meta name=\"twitter:image\" content={metaImage} />}\n\n      {/* Add structured data for Organization */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Organization\",\n          name: defaultTitle,\n          url: site.siteMetadata.siteUrl,\n          logo: `${site.siteMetadata.siteUrl}/icons/icon-512x512.png`,\n          description: metaDescription,\n          sameAs: [\n            \"https://twitter.com/@CodezenSRLS\",\n            \"https://github.com/Codezen-SRLS\",\n            \"https://www.linkedin.com/company/codezensrls\",\n          ],\n        })}\n      </script>\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import { navigate } from \"gatsby\";\nimport { useEffect } from \"react\";\nimport Seo from \"../components/seo\";\nimport * as React from \"react\";\n\nconst NotFoundPage = () => {\n  useEffect(() => {\n    navigate(\"/\");\n  }, []);\n\n  return null;\n};\n\nexport const Head = () => (\n  <Seo title=\"404: Not Found\" description=\"This page doesn't exist\" />\n);\n\nexport default NotFoundPage;\n"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","description","title","children","image","article","keywords","pathname","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","canonical","siteUrl","metaImage","React","name","content","rel","href","property","author","type","JSON","stringify","url","logo","sameAs","Head","Seo","NotFoundPage","useEffect","navigate"],"sourceRoot":""}